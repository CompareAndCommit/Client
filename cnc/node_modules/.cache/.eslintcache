[{"C:\\Users\\윤세린\\Desktop\\C&C\\cnc\\src\\index.js":"1","C:\\Users\\윤세린\\Desktop\\C&C\\cnc\\src\\reportWebVitals.js":"2","C:\\Users\\윤세린\\Desktop\\C&C\\cnc\\src\\App.js":"3","C:\\Users\\윤세린\\Desktop\\C&C\\cnc\\src\\Commit.js":"4","C:\\Users\\윤세린\\Desktop\\C&C\\cnc\\src\\Home.js":"5","C:\\Users\\윤세린\\Desktop\\C&C\\cnc\\src\\Compare.js":"6","C:\\Users\\윤세린\\Desktop\\C&C\\cnc\\src\\component\\footer.js":"7","C:\\Users\\윤세린\\Desktop\\C&C\\cnc\\src\\slider.js":"8","C:\\Users\\윤세린\\Desktop\\C&C\\cnc\\src\\component\\swal-toast.js":"9"},{"size":536,"mtime":1615341473493,"results":"10","hashOfConfig":"11"},{"size":375,"mtime":1615341473498,"results":"12","hashOfConfig":"11"},{"size":1128,"mtime":1620826684359,"results":"13","hashOfConfig":"11"},{"size":4913,"mtime":1621069737708,"results":"14","hashOfConfig":"11"},{"size":2641,"mtime":1619844781514,"results":"15","hashOfConfig":"11"},{"size":14291,"mtime":1620826684374,"results":"16","hashOfConfig":"11"},{"size":944,"mtime":1616130795168,"results":"17","hashOfConfig":"11"},{"size":3059,"mtime":1621069422169,"results":"18","hashOfConfig":"11"},{"size":354,"mtime":1616128563331,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"4qmio0",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Users\\윤세린\\Desktop\\C&C\\cnc\\src\\index.js",[],["41","42"],"C:\\Users\\윤세린\\Desktop\\C&C\\cnc\\src\\reportWebVitals.js",[],"C:\\Users\\윤세린\\Desktop\\C&C\\cnc\\src\\App.js",[],"C:\\Users\\윤세린\\Desktop\\C&C\\cnc\\src\\Commit.js",["43","44"],"import React, { useEffect, useState } from 'react';\r\nimport { VictoryPie } from 'victory';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport SimpleSlider from \"./slider\"\r\nimport './Commit.css'\r\nimport './Compare.css'\r\nimport axios from 'axios';\r\nimport { myToast } from './component/swal-toast';\r\nimport data from \"./data.json\";\r\n\r\nfunction Commit(props) {\r\n\r\n    let [langDatas, onLangDataChange] = useState(\r\n        {\r\n            colors : [],\r\n            langs : []\r\n        }\r\n    );\r\n    \r\n    const switchLangDataHandler = (data) => {\r\n        onLangDataChange(data)\r\n    }\r\n\r\n    const langList = []\r\n\r\n    for(let i=0;i<langDatas.langs.length; i++){\r\n        let color=langDatas.colors[i]\r\n        langList.push(<li key={i}><div className=\"chart-lang-box\" style={{backgroundColor:color}}></div><div className=\"chart-lang-str\">{langDatas.langs[i].x}</div></li>)\r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n        async function getTopFiveLangData() {\r\n\r\n            const githubData = data.data;\r\n\r\n            axios.get(`/top-five-languages?MyName=${props.myName}`).then(\r\n            \r\n                (response) => {\r\n                    if (response.data.code === 400) {\r\n                        myToast(\"warning\", \"Cannot Get Data\")\r\n                        setTimeout(()=>{\r\n                            props.setCommit(false)\r\n                            props.setCompare(true)\r\n                        })\r\n                    }\r\n                    else {\r\n                        const topFiveLang = response.data.top_five_langs;\r\n                        const langPercent = response.data.top_five_pct;\r\n                        const langColors = []\r\n\r\n                        console.log('Top 5 Lang >>', topFiveLang);\r\n\r\n                        for (var i = 0; i < topFiveLang.length; i++) {\r\n                            for (var j = 0; j < githubData.length; j++) {\r\n                                if (topFiveLang[i] == githubData[j].name) {\r\n                                    langColors.push(githubData[j].color);\r\n                                }\r\n                            }\r\n                        }\r\n                        \r\n                        const langData = {\r\n                            colors : langColors,\r\n                            langs : [\r\n                                { x: topFiveLang[0], y: langPercent[0] },\r\n                                { x: topFiveLang[1], y: langPercent[1] },\r\n                                { x: topFiveLang[2], y: langPercent[2] },\r\n                                { x: topFiveLang[3], y: langPercent[3] },\r\n                                { x: topFiveLang[4], y: langPercent[4] }\r\n                            ]\r\n                        }\r\n\r\n                        var langList = []\r\n                        \r\n                        for(let i=0;i<langData.langs.length; i++){\r\n                            let color=langData.colors[i]\r\n                            langList.push(<li key={i}><div className=\"chart-lang-box\" style={{backgroundColor:color}}></div><div className=\"chart-lang-str\">{langData.langs[i].x}</div></li>)\r\n                        }\r\n\r\n                        switchLangDataHandler(langData);\r\n                    }\r\n                },\r\n                (error) => {console.log(error)}\r\n            );\r\n        }\r\n        getTopFiveLangData();\r\n    }, [])\r\n\r\n    return (\r\n        <main>\r\n            <Slide direction=\"right\" in={props.viewCommit}>\r\n            <div id=\"main-container2\">\r\n                <div className=\"header2\">\r\n                    <div className=\"title title2\">\r\n                        Commit\r\n                    </div>\r\n                </div>\r\n                <div className=\"subdiv2\">\r\n                    <div className=\"title-commit-sub\">{props.myName}'s Top 5 Commits</div>\r\n                    <div id=\"chart-container\">\r\n                        <div id=\"chart-pie\">\r\n                            <VictoryPie\r\n                                startAngle={-90}\r\n                                endAngle={270}\r\n                                colorScale={langDatas.colors}\r\n                                data={langDatas.langs}\r\n                                labels={({ l }) => \"\"}\r\n                            />\r\n                        </div>\r\n                        <div id=\"chart-pie-description\">\r\n                            <ul>{langList}</ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"subdiv2\">\r\n                    <div className=\"title-commit-sub\">Languages that {props.friendName} Commit More</div>\r\n                    <div className=\"carousel-container\">\r\n                        <SimpleSlider myName={props.myName} friendName={props.friendName} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </Slide>\r\n        </main>\r\n    )\r\n\r\n}\r\n\r\nexport default Commit;","C:\\Users\\윤세린\\Desktop\\C&C\\cnc\\src\\Home.js",[],"C:\\Users\\윤세린\\Desktop\\C&C\\cnc\\src\\Compare.js",[],"C:\\Users\\윤세린\\Desktop\\C&C\\cnc\\src\\component\\footer.js",[],"C:\\Users\\윤세린\\Desktop\\C&C\\cnc\\src\\slider.js",["45"],"import React, { Component } from \"react\";\r\nimport Slider from \"react-slick\";\r\nimport \"slick-carousel/slick/slick.css\"; \r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport { myToast } from \"./component/swal-toast\";\r\nimport data from \"./data.json\";\r\n\r\nfunction SimpleSliderElement(props) {\r\n  return (<div className=\"carousel-element\"><img className=\"carousel-img\" src={props.src} alt={props.name}/><div className=\"carousel-div\">{props.name}</div></div>)\r\n}\r\n\r\nfunction SampleNextArrow(props) {\r\n  const { className, style, onClick } = props;\r\n  return (\r\n    <div\r\n      className={className}\r\n      style={{ ...style, display: \"block\", background: \"grey\", borderRadius:\"50%\" }}\r\n      onClick={onClick}\r\n    />\r\n  );\r\n}\r\n\r\nfunction SamplePrevArrow(props) {\r\n  const { className, style, onClick } = props;\r\n  return (\r\n    <div\r\n      className={className}\r\n      style={{ ...style, display: \"block\", background: \"grey\", borderRadius:\"50%\" }}\r\n      onClick={onClick}\r\n    />\r\n  );\r\n}\r\n\r\nexport default class SimpleSlider extends Component {\r\n\r\n  state = {}\r\n\r\n  async callAPI() {\r\n    const myName = this.props.myName;\r\n    const friendName = this.props.friendName;\r\n\r\n    return fetch(`/compare-languages?MyName=${myName}&OtherName=${friendName}`)\r\n    .then(response => response.json())\r\n    .then(json => json.no_commit_lang)\r\n    .catch(err => {\r\n      console.log(err)\r\n      myToast(\"warning\", \"Cannot Get Data\")\r\n      setTimeout(()=>{\r\n        this.props.setCommit(false)\r\n        this.props.setCompare(true)\r\n      })\r\n    })\r\n  }\r\n\r\n  async getUnusedLangData(){\r\n    const datas = await this.callAPI();\r\n    const githubData = data.data;\r\n    const excludeData = data.exclude_data;\r\n\r\n    for (var i = 0; i < datas.length; i++) {\r\n\r\n      if (excludeData.includes(datas[i])) {\r\n        datas.splice(i, 1);\r\n      }\r\n\r\n      for (var j = 0; j < githubData.length; j++) {\r\n        if (datas[i] == githubData[j].name) {\r\n          console.log('Lang >>', datas[i]);\r\n          //console.log('Color >>', githubData[j].color);\r\n          console.log('URL >>', githubData[j].src);\r\n          datas[i] = [datas[i], githubData[j].src]\r\n          //datas[i] = [datas[i], githubData[j].color, githubData[j].src]\r\n        }\r\n      }\r\n    }\r\n    this.setState(datas);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getUnusedLangData()\r\n  }\r\n\r\n  renderLanguages() {\r\n    return Object.values(this.state).map((el) => SimpleSliderElement(\r\n      {\r\n        name: el[0],\r\n        src: el[1]\r\n      }\r\n      )\r\n    )\r\n  }\r\n\r\n  render() {\r\n\r\n    const settings = {\r\n      dots: true,\r\n      infinite: true,\r\n      speed: 500,\r\n      nextArrow: <SampleNextArrow />,\r\n      prevArrow: <SamplePrevArrow />,\r\n      slidesToShow: 2,\r\n      slidesToScroll: 1,\r\n      initialSlide: 0,\r\n      autoplay: true,\r\n      autoplaySpeed: 1500,\r\n      pauseOnHover: true\r\n    };\r\n\r\n    const elements = this.state\r\n\r\n    return (\r\n      <div>\r\n        <Slider {...settings}>\r\n          {elements ? this.renderLanguages() : \"loading\"}\r\n        </Slider>\r\n      </div>\r\n    );\r\n\r\n  }\r\n}","C:\\Users\\윤세린\\Desktop\\C&C\\cnc\\src\\component\\swal-toast.js",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":56,"column":52,"nodeType":"52","messageId":"53","endLine":56,"endColumn":54},{"ruleId":"54","severity":1,"message":"55","line":87,"column":8,"nodeType":"56","endLine":87,"endColumn":10,"suggestions":"57"},{"ruleId":"50","severity":1,"message":"51","line":67,"column":22,"nodeType":"52","messageId":"53","endLine":67,"endColumn":24},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["60"],"no-global-assign","no-unsafe-negation",{"desc":"61","fix":"62"},"Update the dependencies array to be: [props]",{"range":"63","text":"64"},[3349,3351],"[props]"]