{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uC724\\uC138\\uB9B0\\\\Desktop\\\\\\uC791\\uC5C5\\\\C&C\\\\cnc\\\\src\\\\Compare.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react'; //import Calendar from 'react-calendar';\n\nimport { VictoryChart, VictoryLine } from 'victory'; //import swal from 'sweetalert2';\n//import 'react-calendar/dist/Calendar.css';\n\nimport axios from \"axios\";\nimport './Compare.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Compare(props) {\n  _s();\n\n  //오늘 날짜 구하기\n  let today = new Date();\n  let year = today.getFullYear();\n  let month = today.getMonth() + 1;\n  let date = today.getDate();\n  let fullDate = '';\n  let tmpDate = '';\n  let minDate = '';\n\n  if (month < 10) {\n    fullDate = year + '-0' + month + '-' + date;\n    minDate = year - 1 + '-0' + month + '-' + date;\n\n    if (month === 1) {\n      tmpDate = year + '-12-' + date;\n    } else {\n      tmpDate = year + '-0' + (month - 1) + '-' + date;\n    }\n  } else {\n    fullDate = year + '-' + month + '-' + date;\n    tmpDate = year + '-' + (month - 1) + '-' + date;\n    minDate = year - 1 + '-' + month + '-' + date;\n  }\n  /*\r\n  fDate는 끝날짜, tDate는 시작날짜. \r\n  위에서 잘 구해놓은 fullDate(오늘)을 fDate로, tmpDate(한달전)을 tDate로 초기화함 \r\n  구글링 했을 때 많은 분들이 저렇게 객체로 담으셔서 나도 객체로 담았다..\r\n  fDate.date를 해야 진짜 그 날짜 문자열 값에 접근 가능\r\n  */\n\n\n  let [fDate, onFullDateChange] = useState({\n    date: fullDate\n  });\n  let [tDate, onTmpDateChange] = useState({\n    date: tmpDate\n  });\n  /*\r\n  switchFullDateHandler(새로운날짜) 라고 함수 호출하면 fdate의 date를 바꾸어준다.\r\n  switchTmpDateHandler도 마찬가지!\r\n  */\n\n  const switchFullDateHandler = newDate => {\n    onFullDateChange({\n      date: newDate\n    });\n  };\n\n  const switchTmpDateHandler = newDate => {\n    onTmpDateChange({\n      date: newDate\n    });\n  };\n  /*\r\n  myData는 내 커밋 데이터\r\n  frData는 내 친구 커밋 데이터\r\n  */\n\n\n  let [myData, onMyDataChange] = useState({\n    data: [{\n      x: \"\",\n      y: 0\n    }]\n  });\n  let [frData, onFrDataChange] = useState({\n    data: [{\n      x: \"\",\n      y: 0\n    }]\n  });\n  /*\r\n  위에 있는 switchTmpDateHandler 친구들과 비슷한 로직이다\r\n  */\n\n  const switchMyDataHandler = newData => {\n    onMyDataChange({\n      data: newData\n    });\n  };\n\n  const switchFrDataHandler = newData => {\n    onFrDataChange({\n      data: newData\n    });\n  };\n  /*\r\n  useEffect 함수에는 두 개의 인자가 담기는데\r\n  첫번째 인자는 호출될 함수를\r\n  두번째 인자는 함수를 호출하는 트리거(?)를 담는다.\r\n  \r\n  첫번째 인자로 담긴 함수는 axios로 요청 받아서 열심히 그래프에 데이터를 넣는 부분!!\r\n  console.log()된 값이나 post맨에서 받은 값으로 어떻게 구성되었는지 볼 수 있다.\r\n    지금 두번째 인자로 [fDate, tDate]가 담겨있는데,\r\n  위에 state로 정의된\r\n  fDate가 바뀔 때마다, 혹은 tDate가 바뀔 때마다 위의 함수가 호출된다.\r\n  아래의 date input하는 부분에서 변화가 생길 때마다 state에 있는 fDate나 tDate를 바꿔줘~ 라고 코드를 짰는데, ( onChange={ev => switchFullDateHandler(ev.target.value)} )\r\n  그게 실행될 때마다, 즉 사용자가 date를 새로 선택할 때마다 위의 함수가 호출된다.\r\n  */\n\n\n  useEffect(() => {\n    axios.get(`/compare_commits?MyName=${props.myName}&OtherName=${props.friendName}&StartDate=${tDate.date}&EndDate=${fDate.date}`).then(response => {\n      console.log(response);\n      const myDatas = [];\n      const frDatas = [];\n      const dates = response.data.my_data.date;\n      const mData = response.data.my_data.count;\n      const fData = response.data.other_data.count;\n\n      for (let i = 0; i < dates.length; i++) {\n        myDatas.push({\n          x: dates[i],\n          y: mData[i]\n        });\n        frDatas.push({\n          x: dates[i],\n          y: fData[i]\n        });\n      }\n\n      switchMyDataHandler(myDatas);\n      switchFrDataHandler(frDatas);\n    }, error => {\n      console.log(error);\n    });\n  }, [fDate, tDate]);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"main-container2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title title2\",\n          children: \"Compare\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"versus\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"me\",\n            children: props.myName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"vs\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"v\",\n              children: \"V\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"s\",\n              children: \"S\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"friend\",\n            children: props.friendName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selectdate\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"selectment\",\n          children: \"Select a period\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          width: \"60rem\",\n          color: \"black\",\n          size: \"1\",\n          align: \"left\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"calendar\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            name: \"enddate\",\n            value: fDate.date,\n            min: minDate,\n            max: fullDate,\n            onChange: ev => switchFullDateHandler(ev.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            name: \"startdate\",\n            value: tDate.date,\n            min: minDate,\n            max: fullDate,\n            onChange: ev => switchTmpDateHandler(ev.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"subdiv\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart\",\n          children: [/*#__PURE__*/_jsxDEV(VictoryChart, {\n            animate: {\n              duration: 500,\n              onLoad: {\n                duration: 500\n              }\n            },\n            minDomain: {\n              y: 0\n            },\n            domainPadding: {\n              x: [10, -10],\n              y: 20\n            },\n            width: 1200,\n            height: 600,\n            children: [/*#__PURE__*/_jsxDEV(VictoryLine, {\n              style: {\n                data: {\n                  stroke: \"#B9EFC2\",\n                  strokeWidth: 5,\n                  strokeLinecap: \"round\"\n                }\n              },\n              data: myData.data,\n              interpolation: \"natural\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(VictoryLine, {\n              style: {\n                data: {\n                  stroke: \"#2C974B\",\n                  strokeWidth: 5,\n                  strokeLinecap: \"round\"\n                }\n              },\n              data: frData.data,\n              interpolation: \"natural\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"userClassify\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user1\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"box1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: props.myName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user2\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"box2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: props.friendName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"analysis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 9\n  }, this);\n} // class Commit extends Component {\n//     state = {\n//         myName : \"nicolas serano\",\n//         friendName : \"Serin-Yoon\"\n//     }\n//     render() {\n//         return (\n//             <main>\n//                 <div id=\"main-container2\">\n//                     <div className=\"header2\">\n//                         <div className=\"title\">\n//                             Compare\n//                         </div>\n//                     <div className=\"versus\">\n//                         <span className=\"me\">{this.state.myName}</span>\n//                         <div className=\"vs\">\n//                             <div className=\"v\">V</div>\n//                             <div className=\"s\">S</div>\n//                         </div>\n//                         <span className=\"friend\">{this.state.friendName}</span>\n//                     </div>\n//                     </div>\n//                     <div className=\"chart\"></div>\n//                 </div>\n//             </main>\n//         )\n//     }\n// }\n\n\n_s(Compare, \"RcgaOO+s6DAUrPH4RmX5+LeLO/Y=\");\n\n_c = Compare;\nexport default Compare;\n\nvar _c;\n\n$RefreshReg$(_c, \"Compare\");","map":{"version":3,"sources":["C:/Users/윤세린/Desktop/작업/C&C/cnc/src/Compare.js"],"names":["React","useEffect","useState","VictoryChart","VictoryLine","axios","Compare","props","today","Date","year","getFullYear","month","getMonth","date","getDate","fullDate","tmpDate","minDate","fDate","onFullDateChange","tDate","onTmpDateChange","switchFullDateHandler","newDate","switchTmpDateHandler","myData","onMyDataChange","data","x","y","frData","onFrDataChange","switchMyDataHandler","newData","switchFrDataHandler","get","myName","friendName","then","response","console","log","myDatas","frDatas","dates","my_data","mData","count","fData","other_data","i","length","push","error","ev","target","value","duration","onLoad","stroke","strokeWidth","strokeLinecap"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C,C,CACA;;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,SAA1C,C,CACA;AACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,eAAP;;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACpB;AACA,MAAIC,KAAK,GAAG,IAAIC,IAAJ,EAAZ;AACA,MAAIC,IAAI,GAAGF,KAAK,CAACG,WAAN,EAAX;AACA,MAAIC,KAAK,GAAGJ,KAAK,CAACK,QAAN,KAAmB,CAA/B;AACA,MAAIC,IAAI,GAAGN,KAAK,CAACO,OAAN,EAAX;AACA,MAAIC,QAAQ,GAAG,EAAf;AACA,MAAIC,OAAO,GAAG,EAAd;AACA,MAAIC,OAAO,GAAG,EAAd;;AAEA,MAAIN,KAAK,GAAG,EAAZ,EAAgB;AACXI,IAAAA,QAAQ,GAAGN,IAAI,GAAG,IAAP,GAAcE,KAAd,GAAsB,GAAtB,GAA4BE,IAAvC;AACAI,IAAAA,OAAO,GAAIR,IAAI,GAAG,CAAR,GAAa,IAAb,GAAoBE,KAApB,GAA4B,GAA5B,GAAkCE,IAA5C;;AACA,QAAIF,KAAK,KAAK,CAAd,EAAiB;AACbK,MAAAA,OAAO,GAAGP,IAAI,GAAG,MAAP,GAAgBI,IAA1B;AACH,KAFD,MAGK;AACDG,MAAAA,OAAO,GAAGP,IAAI,GAAG,IAAP,IAAeE,KAAK,GAAG,CAAvB,IAA4B,GAA5B,GAAkCE,IAA5C;AACH;AACL,GATD,MAUK;AACDE,IAAAA,QAAQ,GAAGN,IAAI,GAAG,GAAP,GAAaE,KAAb,GAAqB,GAArB,GAA2BE,IAAtC;AACAG,IAAAA,OAAO,GAAGP,IAAI,GAAG,GAAP,IAAcE,KAAK,GAAG,CAAtB,IAA2B,GAA3B,GAAiCE,IAA3C;AACAI,IAAAA,OAAO,GAAIR,IAAI,GAAG,CAAR,GAAa,GAAb,GAAmBE,KAAnB,GAA2B,GAA3B,GAAiCE,IAA3C;AACH;AAED;AACJ;AACA;AACA;AACA;AACA;;;AACI,MAAI,CAACK,KAAD,EAAQC,gBAAR,IAA4BlB,QAAQ,CAAC;AAACY,IAAAA,IAAI,EAACE;AAAN,GAAD,CAAxC;AACA,MAAI,CAACK,KAAD,EAAQC,eAAR,IAA2BpB,QAAQ,CAAC;AAACY,IAAAA,IAAI,EAACG;AAAN,GAAD,CAAvC;AAEA;AACJ;AACA;AACA;;AACI,QAAMM,qBAAqB,GAAIC,OAAD,IAAa;AACvCJ,IAAAA,gBAAgB,CAAC;AAACN,MAAAA,IAAI,EAACU;AAAN,KAAD,CAAhB;AACH,GAFD;;AAIA,QAAMC,oBAAoB,GAAID,OAAD,IAAa;AACtCF,IAAAA,eAAe,CAAC;AAACR,MAAAA,IAAI,EAACU;AAAN,KAAD,CAAf;AACH,GAFD;AAIA;AACJ;AACA;AACA;;;AACI,MAAI,CAACE,MAAD,EAASC,cAAT,IAA2BzB,QAAQ,CAAC;AAAC0B,IAAAA,IAAI,EAAC,CAC1C;AAACC,MAAAA,CAAC,EAAE,EAAJ;AAAQC,MAAAA,CAAC,EAAE;AAAX,KAD0C;AAAN,GAAD,CAAvC;AAIA,MAAI,CAACC,MAAD,EAASC,cAAT,IAA2B9B,QAAQ,CAAC;AAAC0B,IAAAA,IAAI,EAAE,CAC3C;AAACC,MAAAA,CAAC,EAAE,EAAJ;AAAQC,MAAAA,CAAC,EAAE;AAAX,KAD2C;AAAP,GAAD,CAAvC;AAIA;AACJ;AACA;;AACI,QAAMG,mBAAmB,GAAIC,OAAD,IAAa;AACrCP,IAAAA,cAAc,CAAC;AAACC,MAAAA,IAAI,EAACM;AAAN,KAAD,CAAd;AACH,GAFD;;AAIA,QAAMC,mBAAmB,GAAID,OAAD,IAAa;AACrCF,IAAAA,cAAc,CAAC;AAACJ,MAAAA,IAAI,EAACM;AAAN,KAAD,CAAd;AACH,GAFD;AAIA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEIjC,EAAAA,SAAS,CAAC,MAAI;AACVI,IAAAA,KAAK,CAAC+B,GAAN,CAAW,2BAA0B7B,KAAK,CAAC8B,MAAO,cAAa9B,KAAK,CAAC+B,UAAW,cAAajB,KAAK,CAACP,IAAK,YAAWK,KAAK,CAACL,IAAK,EAA9H,EAAiIyB,IAAjI,CACKC,QAAD,IAAc;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,YAAMG,OAAO,GAAG,EAAhB;AACA,YAAMC,OAAO,GAAG,EAAhB;AACA,YAAMC,KAAK,GAAGL,QAAQ,CAACZ,IAAT,CAAckB,OAAd,CAAsBhC,IAApC;AACA,YAAMiC,KAAK,GAAGP,QAAQ,CAACZ,IAAT,CAAckB,OAAd,CAAsBE,KAApC;AACA,YAAMC,KAAK,GAAGT,QAAQ,CAACZ,IAAT,CAAcsB,UAAd,CAAyBF,KAAvC;;AACA,WAAI,IAAIG,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACN,KAAK,CAACO,MAApB,EAA2BD,CAAC,EAA5B,EAA+B;AAC3BR,QAAAA,OAAO,CAACU,IAAR,CAAa;AAACxB,UAAAA,CAAC,EAACgB,KAAK,CAACM,CAAD,CAAR;AAAarB,UAAAA,CAAC,EAACiB,KAAK,CAACI,CAAD;AAApB,SAAb;AACAP,QAAAA,OAAO,CAACS,IAAR,CAAa;AAACxB,UAAAA,CAAC,EAACgB,KAAK,CAACM,CAAD,CAAR;AAAarB,UAAAA,CAAC,EAACmB,KAAK,CAACE,CAAD;AAApB,SAAb;AACH;;AACDlB,MAAAA,mBAAmB,CAACU,OAAD,CAAnB;AACAR,MAAAA,mBAAmB,CAACS,OAAD,CAAnB;AACH,KAdL,EAeKU,KAAD,IAAW;AAACb,MAAAA,OAAO,CAACC,GAAR,CAAYY,KAAZ;AAAmB,KAfnC;AAiBH,GAlBQ,EAkBN,CAACnC,KAAD,EAAQE,KAAR,CAlBM,CAAT;AAoBA,sBACI;AAAA,2BACQ;AAAK,MAAA,EAAE,EAAC,iBAAR;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAIA;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA,kCACI;AAAM,YAAA,SAAS,EAAC,IAAhB;AAAA,sBAAuBd,KAAK,CAAC8B;AAA7B;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAK,YAAA,SAAS,EAAC,IAAf;AAAA,oCACI;AAAK,cAAA,SAAS,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAK,cAAA,SAAS,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAMI;AAAM,YAAA,SAAS,EAAC,QAAhB;AAAA,sBAA2B9B,KAAK,CAAC+B;AAAjC;AAAA;AAAA;AAAA;AAAA,kBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAeI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACI;AAAG,UAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAI,UAAA,KAAK,EAAC,OAAV;AAAkB,UAAA,KAAK,EAAC,OAAxB;AAAgC,UAAA,IAAI,EAAC,GAArC;AAAyC,UAAA,KAAK,EAAC;AAA/C;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAII;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,kCACI;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,IAAI,EAAC,SAAxB;AAAkC,YAAA,KAAK,EAAEnB,KAAK,CAACL,IAA/C;AAAqD,YAAA,GAAG,EAAEI,OAA1D;AAAmE,YAAA,GAAG,EAAEF,QAAxE;AAAkF,YAAA,QAAQ,EAAEuC,EAAE,IAAIhC,qBAAqB,CAACgC,EAAE,CAACC,MAAH,CAAUC,KAAX;AAAvH;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,IAAI,EAAC,WAAxB;AAAoC,YAAA,KAAK,EAAEpC,KAAK,CAACP,IAAjD;AAAuD,YAAA,GAAG,EAAEI,OAA5D;AAAqE,YAAA,GAAG,EAAEF,QAA1E;AAAoF,YAAA,QAAQ,EAAEuC,EAAE,IAAI9B,oBAAoB,CAAC8B,EAAE,CAACC,MAAH,CAAUC,KAAX;AAAxH;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAfJ,eAyBI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,kCACI,QAAC,YAAD;AACA,YAAA,OAAO,EAAE;AACLC,cAAAA,QAAQ,EAAE,GADL;AAELC,cAAAA,MAAM,EAAE;AAAED,gBAAAA,QAAQ,EAAE;AAAZ;AAFH,aADT;AAKA,YAAA,SAAS,EACL;AAAC5B,cAAAA,CAAC,EAAC;AAAH,aANJ;AAQA,YAAA,aAAa,EAAE;AAACD,cAAAA,CAAC,EAAE,CAAC,EAAD,EAAK,CAAC,EAAN,CAAJ;AAAeC,cAAAA,CAAC,EAAE;AAAlB,aARf;AASA,YAAA,KAAK,EAAE,IATP;AAUA,YAAA,MAAM,EAAE,GAVR;AAAA,oCAYI,QAAC,WAAD;AACI,cAAA,KAAK,EAAE;AAAEF,gBAAAA,IAAI,EAAE;AAAEgC,kBAAAA,MAAM,EAAE,SAAV;AAAqBC,kBAAAA,WAAW,EAAC,CAAjC;AAAoCC,kBAAAA,aAAa,EAAC;AAAlD;AAAR,eADX;AAEI,cAAA,IAAI,EAAEpC,MAAM,CAACE,IAFjB;AAGI,cAAA,aAAa,EAAC;AAHlB;AAAA;AAAA;AAAA;AAAA,oBAZJ,eAiBI,QAAC,WAAD;AACI,cAAA,KAAK,EAAE;AAAEA,gBAAAA,IAAI,EAAE;AAAEgC,kBAAAA,MAAM,EAAE,SAAV;AAAqBC,kBAAAA,WAAW,EAAC,CAAjC;AAAoCC,kBAAAA,aAAa,EAAC;AAAlD;AAAR,eADX;AAEI,cAAA,IAAI,EAAE/B,MAAM,CAACH,IAFjB;AAGI,cAAA,aAAa,EAAC;AAHlB;AAAA;AAAA;AAAA;AAAA,oBAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAyBI;AAAK,YAAA,SAAS,EAAC,cAAf;AAAA,oCACI;AAAK,cAAA,SAAS,EAAC,OAAf;AAAA,sCACQ;AAAK,gBAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,sBADR,eAEQ;AAAA,0BAAOrB,KAAK,CAAC8B;AAAb;AAAA;AAAA;AAAA;AAAA,sBAFR;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAKI;AAAK,cAAA,SAAS,EAAC,OAAf;AAAA,sCACI;AAAK,gBAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAA,0BAAO9B,KAAK,CAAC+B;AAAb;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAzBJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAwCI;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBAxCJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAzBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AAAA;AAAA,UADJ;AA4EH,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;GAjNShC,O;;KAAAA,O;AAmNT,eAAeA,OAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\n//import Calendar from 'react-calendar';\r\nimport { VictoryChart, VictoryLine } from 'victory';\r\n//import swal from 'sweetalert2';\r\n//import 'react-calendar/dist/Calendar.css';\r\nimport axios from \"axios\"\r\nimport './Compare.css'\r\n\r\nfunction Compare(props) {\r\n    //오늘 날짜 구하기\r\n    let today = new Date();\r\n    let year = today.getFullYear();\r\n    let month = today.getMonth() + 1;\r\n    let date = today.getDate();\r\n    let fullDate = '';\r\n    let tmpDate = '';\r\n    let minDate = '';\r\n\r\n    if (month < 10) {\r\n         fullDate = year + '-0' + month + '-' + date;\r\n         minDate = (year - 1) + '-0' + month + '-' + date;\r\n         if (month === 1) {\r\n             tmpDate = year + '-12-' + date;\r\n         }\r\n         else {\r\n             tmpDate = year + '-0' + (month - 1) + '-' + date;\r\n         }\r\n    }\r\n    else {\r\n        fullDate = year + '-' + month + '-' + date;\r\n        tmpDate = year + '-' + (month - 1) + '-' + date;\r\n        minDate = (year - 1) + '-' + month + '-' + date;\r\n    }\r\n\r\n    /*\r\n    fDate는 끝날짜, tDate는 시작날짜. \r\n    위에서 잘 구해놓은 fullDate(오늘)을 fDate로, tmpDate(한달전)을 tDate로 초기화함 \r\n    구글링 했을 때 많은 분들이 저렇게 객체로 담으셔서 나도 객체로 담았다..\r\n    fDate.date를 해야 진짜 그 날짜 문자열 값에 접근 가능\r\n    */\r\n    let [fDate, onFullDateChange] = useState({date:fullDate});\r\n    let [tDate, onTmpDateChange] = useState({date:tmpDate});\r\n\r\n    /*\r\n    switchFullDateHandler(새로운날짜) 라고 함수 호출하면 fdate의 date를 바꾸어준다.\r\n    switchTmpDateHandler도 마찬가지!\r\n    */\r\n    const switchFullDateHandler = (newDate) => {\r\n        onFullDateChange({date:newDate})\r\n    }\r\n\r\n    const switchTmpDateHandler = (newDate) => {\r\n        onTmpDateChange({date:newDate})\r\n    }\r\n\r\n    /*\r\n    myData는 내 커밋 데이터\r\n    frData는 내 친구 커밋 데이터\r\n    */\r\n    let [myData, onMyDataChange] = useState({data:[\r\n        {x: \"\", y: 0},\r\n    ]})\r\n    \r\n    let [frData, onFrDataChange] = useState({data: [\r\n        {x: \"\", y: 0},\r\n    ]})\r\n\r\n    /*\r\n    위에 있는 switchTmpDateHandler 친구들과 비슷한 로직이다\r\n    */\r\n    const switchMyDataHandler = (newData) => {\r\n        onMyDataChange({data:newData})\r\n    }\r\n\r\n    const switchFrDataHandler = (newData) => {\r\n        onFrDataChange({data:newData})\r\n    }\r\n\r\n    /*\r\n    useEffect 함수에는 두 개의 인자가 담기는데\r\n    첫번째 인자는 호출될 함수를\r\n    두번째 인자는 함수를 호출하는 트리거(?)를 담는다.\r\n    \r\n    첫번째 인자로 담긴 함수는 axios로 요청 받아서 열심히 그래프에 데이터를 넣는 부분!!\r\n    console.log()된 값이나 post맨에서 받은 값으로 어떻게 구성되었는지 볼 수 있다.\r\n\r\n    지금 두번째 인자로 [fDate, tDate]가 담겨있는데,\r\n    위에 state로 정의된\r\n    fDate가 바뀔 때마다, 혹은 tDate가 바뀔 때마다 위의 함수가 호출된다.\r\n    아래의 date input하는 부분에서 변화가 생길 때마다 state에 있는 fDate나 tDate를 바꿔줘~ 라고 코드를 짰는데, ( onChange={ev => switchFullDateHandler(ev.target.value)} )\r\n    그게 실행될 때마다, 즉 사용자가 date를 새로 선택할 때마다 위의 함수가 호출된다.\r\n    */\r\n    useEffect(()=>{\r\n        axios.get(`/compare_commits?MyName=${props.myName}&OtherName=${props.friendName}&StartDate=${tDate.date}&EndDate=${fDate.date}`).then(\r\n            (response) => {\r\n                console.log(response)\r\n                const myDatas = []\r\n                const frDatas = []\r\n                const dates = response.data.my_data.date;\r\n                const mData = response.data.my_data.count;\r\n                const fData = response.data.other_data.count;\r\n                for(let i=0;i<dates.length;i++){\r\n                    myDatas.push({x:dates[i], y:mData[i]})\r\n                    frDatas.push({x:dates[i], y:fData[i]})\r\n                }\r\n                switchMyDataHandler(myDatas)\r\n                switchFrDataHandler(frDatas)\r\n            },\r\n            (error) => {console.log(error)}\r\n            );\r\n    }, [fDate, tDate])\r\n    \r\n    return (\r\n        <main>\r\n                <div id=\"main-container2\">\r\n                    <div className=\"header2\">\r\n                        <div className=\"title title2\">\r\n                            Compare\r\n                        </div>\r\n                    <div className=\"versus\">\r\n                        <span className=\"me\">{ props.myName }</span>\r\n                        <div className=\"vs\">\r\n                            <div className=\"v\">V</div>\r\n                            <div className=\"s\">S</div>\r\n                        </div>\r\n                        <span className=\"friend\">{ props.friendName }</span>\r\n                    </div>\r\n                    </div>\r\n\r\n                    <div className=\"selectdate\">\r\n                        <p className=\"selectment\">Select a period</p>\r\n                        <hr width=\"60rem\" color=\"black\" size=\"1\" align=\"left\" />\r\n                        \r\n                        <div className=\"calendar\">\r\n                            <input type=\"date\" name=\"enddate\" value={fDate.date} min={minDate} max={fullDate} onChange={ev => switchFullDateHandler(ev.target.value)}/>\r\n                            <input type=\"date\" name=\"startdate\" value={tDate.date} min={minDate} max={fullDate} onChange={ev => switchTmpDateHandler(ev.target.value)} />\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"subdiv\">\r\n                        <div className=\"chart\">\r\n                            <VictoryChart\r\n                            animate={{\r\n                                duration: 500,\r\n                                onLoad: { duration: 500 }\r\n                            }}\r\n                            minDomain={\r\n                                {y:0}\r\n                            }\r\n                            domainPadding={{x: [10, -10], y: 20}}\r\n                            width={1200}\r\n                            height={600}\r\n                            >\r\n                                <VictoryLine\r\n                                    style={{ data: { stroke: \"#B9EFC2\", strokeWidth:5, strokeLinecap:\"round\" } }}\r\n                                    data={myData.data}\r\n                                    interpolation=\"natural\"\r\n                                />\r\n                                <VictoryLine\r\n                                    style={{ data: { stroke: \"#2C974B\", strokeWidth:5, strokeLinecap:\"round\" } }}\r\n                                    data={frData.data}\r\n                                    interpolation=\"natural\"\r\n                                    />\r\n                            </VictoryChart>\r\n\r\n                            <div className=\"userClassify\">\r\n                                <div className=\"user1\">\r\n                                        <div className=\"box1\"></div>\r\n                                        <div>{ props.myName }</div>\r\n                                </div>\r\n                                <div className=\"user2\">\r\n                                    <div className=\"box2\"></div>\r\n                                    <div>{ props.friendName }</div>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                       \r\n\r\n                        <div className=\"analysis\">\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </main>\r\n    )\r\n\r\n}\r\n\r\n// class Commit extends Component {\r\n//     state = {\r\n//         myName : \"nicolas serano\",\r\n//         friendName : \"Serin-Yoon\"\r\n//     }\r\n//     render() {\r\n//         return (\r\n//             <main>\r\n//                 <div id=\"main-container2\">\r\n//                     <div className=\"header2\">\r\n//                         <div className=\"title\">\r\n//                             Compare\r\n//                         </div>\r\n//                     <div className=\"versus\">\r\n//                         <span className=\"me\">{this.state.myName}</span>\r\n//                         <div className=\"vs\">\r\n//                             <div className=\"v\">V</div>\r\n//                             <div className=\"s\">S</div>\r\n//                         </div>\r\n//                         <span className=\"friend\">{this.state.friendName}</span>\r\n//                     </div>\r\n//                     </div>\r\n//                     <div className=\"chart\"></div>\r\n//                 </div>\r\n//             </main>\r\n//         )\r\n//     }\r\n// }\r\n\r\nexport default Compare;"]},"metadata":{},"sourceType":"module"}