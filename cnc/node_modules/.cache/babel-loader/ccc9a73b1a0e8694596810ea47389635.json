{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uC724\\uC138\\uB9B0\\\\Desktop\\\\C&C\\\\cnc\\\\src\\\\slider.js\";\nimport React, { Component } from \"react\";\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport { myToast } from \"./component/swal-toast\";\nimport data from \"./data.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SimpleSliderElement(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"carousel-element\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"carousel-img\",\n      src: props.src,\n      alt: props.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 45\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"carousel-div\",\n      children: props.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 109\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 11\n  }, this);\n}\n\n_c = SimpleSliderElement;\n\nfunction SampleNextArrow(props) {\n  const {\n    className,\n    style,\n    onClick\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className,\n    style: { ...style,\n      display: \"block\",\n      background: \"grey\",\n      borderRadius: \"50%\"\n    },\n    onClick: onClick\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = SampleNextArrow;\n\nfunction SamplePrevArrow(props) {\n  const {\n    className,\n    style,\n    onClick\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className,\n    style: { ...style,\n      display: \"block\",\n      background: \"grey\",\n      borderRadius: \"50%\"\n    },\n    onClick: onClick\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = SamplePrevArrow;\nexport default class SimpleSlider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n  }\n\n  async callAPI() {\n    const myName = this.props.myName;\n    const friendName = this.props.friendName;\n    const githubData = data.data;\n    const excludeData = data.exclude_data;\n    console.log('ㅇㅇ', JSON.parse(githubData));\n    return fetch(`/compare-languages?MyName=${myName}&OtherName=${friendName}`).then(response => response.json()).then(json => json.no_commit_lang).catch(err => {\n      console.log(err);\n      myToast(\"warning\", \"Cannot Get Data\");\n      setTimeout(() => {\n        this.props.setCommit(false);\n        this.props.setCompare(true);\n      });\n    });\n  }\n\n  async getUnusedLangData() {\n    const datas = await this.callAPI();\n    this.setState(datas);\n  }\n\n  componentDidMount() {\n    this.getUnusedLangData();\n  }\n\n  renderLanguages() {\n    return Object.values(this.state).map(el => SimpleSliderElement({\n      name: el,\n      src: \"https://upload.wikimedia.org/wikipedia/en/thumb/4/40/Sungkyunkwan_University_seal.svg/1200px-Sungkyunkwan_University_seal.svg.png\"\n    }));\n  }\n\n  render() {\n    const settings = {\n      dots: true,\n      infinite: true,\n      speed: 500,\n      nextArrow: /*#__PURE__*/_jsxDEV(SampleNextArrow, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 18\n      }, this),\n      prevArrow: /*#__PURE__*/_jsxDEV(SamplePrevArrow, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 18\n      }, this),\n      slidesToShow: 2,\n      slidesToScroll: 1,\n      initialSlide: 0,\n      autoplay: true,\n      autoplaySpeed: 1500,\n      pauseOnHover: true\n    };\n    const elements = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Slider, { ...settings,\n        children: elements ? this.renderLanguages() : \"loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"SimpleSliderElement\");\n$RefreshReg$(_c2, \"SampleNextArrow\");\n$RefreshReg$(_c3, \"SamplePrevArrow\");","map":{"version":3,"sources":["C:/Users/윤세린/Desktop/C&C/cnc/src/slider.js"],"names":["React","Component","Slider","myToast","data","SimpleSliderElement","props","src","name","SampleNextArrow","className","style","onClick","display","background","borderRadius","SamplePrevArrow","SimpleSlider","state","callAPI","myName","friendName","githubData","excludeData","exclude_data","console","log","JSON","parse","fetch","then","response","json","no_commit_lang","catch","err","setTimeout","setCommit","setCompare","getUnusedLangData","datas","setState","componentDidMount","renderLanguages","Object","values","map","el","render","settings","dots","infinite","speed","nextArrow","prevArrow","slidesToShow","slidesToScroll","initialSlide","autoplay","autoplaySpeed","pauseOnHover","elements"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Slider from \"react-slick\";\r\nimport \"slick-carousel/slick/slick.css\"; \r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport { myToast } from \"./component/swal-toast\";\r\nimport data from \"./data.json\";\r\n\r\nfunction SimpleSliderElement(props) {\r\n  return (<div className=\"carousel-element\"><img className=\"carousel-img\" src={props.src} alt={props.name}/><div className=\"carousel-div\">{props.name}</div></div>)\r\n}\r\n\r\nfunction SampleNextArrow(props) {\r\n  const { className, style, onClick } = props;\r\n  return (\r\n    <div\r\n      className={className}\r\n      style={{ ...style, display: \"block\", background: \"grey\", borderRadius:\"50%\" }}\r\n      onClick={onClick}\r\n    />\r\n  );\r\n}\r\n\r\nfunction SamplePrevArrow(props) {\r\n  const { className, style, onClick } = props;\r\n  return (\r\n    <div\r\n      className={className}\r\n      style={{ ...style, display: \"block\", background: \"grey\", borderRadius:\"50%\" }}\r\n      onClick={onClick}\r\n    />\r\n  );\r\n}\r\n\r\nexport default class SimpleSlider extends Component {\r\n\r\n  state = {}\r\n\r\n  async callAPI() {\r\n    const myName = this.props.myName;\r\n    const friendName = this.props.friendName;\r\n\r\n    const githubData = data.data;\r\n    const excludeData = data.exclude_data;\r\n    \r\n    console.log('ㅇㅇ', JSON.parse(githubData));\r\n\r\n    return fetch(`/compare-languages?MyName=${myName}&OtherName=${friendName}`)\r\n    .then(response => response.json())\r\n    .then(json => json.no_commit_lang)\r\n    .catch(err => {\r\n      console.log(err)\r\n      myToast(\"warning\", \"Cannot Get Data\")\r\n      setTimeout(()=>{\r\n        this.props.setCommit(false)\r\n        this.props.setCompare(true)\r\n      })\r\n    })\r\n  }\r\n\r\n  async getUnusedLangData(){\r\n    const datas = await this.callAPI();\r\n    this.setState(datas)\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getUnusedLangData()\r\n  }\r\n\r\n  renderLanguages() {\r\n    return Object.values(this.state).map((el) => SimpleSliderElement({name:el, src:\"https://upload.wikimedia.org/wikipedia/en/thumb/4/40/Sungkyunkwan_University_seal.svg/1200px-Sungkyunkwan_University_seal.svg.png\"}))\r\n  }\r\n\r\n  render() {\r\n\r\n    const settings = {\r\n      dots: true,\r\n      infinite: true,\r\n      speed: 500,\r\n      nextArrow: <SampleNextArrow />,\r\n      prevArrow: <SamplePrevArrow />,\r\n      slidesToShow: 2,\r\n      slidesToScroll: 1,\r\n      initialSlide: 0,\r\n      autoplay: true,\r\n      autoplaySpeed: 1500,\r\n      pauseOnHover: true\r\n    };\r\n\r\n    const elements = this.state\r\n\r\n    return (\r\n      <div>\r\n        <Slider {...settings}>\r\n          {elements ? this.renderLanguages() : \"loading\"}\r\n        </Slider>\r\n      </div>\r\n    );\r\n\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}